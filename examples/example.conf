########################################
## /etc/nginx/nginx.conf START
user www-data;
worker_processes 4;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ############################
    # Basic Settings
    ############################

    map_hash_max_size 512;
    map_hash_bucket_size 512; 

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Disable detailed NGINX "Server" header
    server_tokens off;
    more_set_headers 'Server: Server';
    # Disable referrers when we redirect useragents away from this server
    add_header Referrer-Policy "no-referrer";

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type contents/html;

    ############################
    # SSL Settings
    ############################

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ############################
    # Logging Settings
    #############################
    log_format main '[$time_iso8601] $remote_addr - $remote_user  proxy:$upstream_addr $status '
                    '"$request" $body_bytes_sent "$http_referer"'
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    #############################
    # Compression
    ##############################
    # Disable GZIP compression to prevent C2 errors
    gzip off;
    gzip_disable "msie6";

    #############################
    # User Agent Mapping 
    #############################
    map $http_user_agent $allowlist_ua { 
        default 0; 
        Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36 1;
    }

    ############################
    # HTTP server block with reverse-proxy 
    ############################

    server {
        ################################
        # IP Denylist (Enable if needed)
        ################################
        # NO DENYLIST

        #########################
        # Custom server variables
        #########################
        set $C2_SERVER https://127.0.0.1:2222;
        set $REDIRECT_DOMAIN https://www.google.com;
        server_name blog.example.com;

        #########################
        # Listening ports
        #########################
        listen 80;
        listen [::]:80;
        
        #####################
        # SSL Configuration
        #####################
        #listen 443 ssl;
        #listen [::]:443 ssl;
        #ssl on;

        #ssl_certificate /etc/letsencrypt/live/<DOMAIN_NAME>/fullchain.pem; # managed by Certbot
        #ssl_certificate_key /etc/letsencrypt/live/<DOMAIN_NAME>/privkey.pem; # managed by Certbot
        #ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
        #ssl_session_timeout 1440m; # managed by Certbot
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
        #ssl_prefer_server_ciphers on; # managed by Certbot

        #########################################
        # Server root directory for serving files
        #########################################
        root /var/www/html;
        index index.html;
        
        ##########################
        # Error handling
        ##########################
        # Set all custom error pages to redirect back to the $host from the requested URI
        # This should return to the useragent to the server root and avoid presentation of default Nginx error pages
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 @redirect;

        ##########################
        # Generic file request handling
        ##########################
        # Try to serve static file from server root
        # Try to serve index.html if present
        # Send to @redirect location
        location / {
            try_files $uri $uri/ /index.html @redirect;
        }

        ##########################
        # C2 Profile endpoints
        ##########################
        # Custom regex to allow requests to backend C2 server
        # Note: If the backend C2 server isn't available, the useragent will receive a redirect to the 
        #       redirector's root page due to the custom error handling configured above
        # Note: This intentionally does not handle default Beacon staging ^/....
        location ~ ^(/redteamplaybook.gif.*|/index.php.*|/grootsecurity.txt.*|/index.js.*)$ {
            # If useragent doesn't match, redirect to redirect domain 
            if ($allowlist_ua = 0) { 
                return 302 $REDIRECT_DOMAIN$request_uri;
            }
            proxy_pass          $C2_SERVER;
        
            # If you want to pass the C2 server's "Server" header through then uncomment this line
            # proxy_pass_header Server;
            expires             off;
            proxy_redirect      off;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Real-IP           $remote_addr;
        }

        # Redirect requests to the $REDIRECT_DOMAIN + Original request URI
        location @redirect {
        	return 302 $REDIRECT_DOMAIN$request_uri;
        }
    }
}
## /etc/nginx/nginx.conf END
########################################